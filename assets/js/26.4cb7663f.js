(window.webpackJsonp=window.webpackJsonp||[]).push([[26],{278:function(t,e,s){"use strict";s.r(e);var n=s(0),a=Object(n.a)({},(function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("div",{staticClass:"content"},[s("h1",{attrs:{id:"react-应用"}},[t._v("React 应用")]),t._m(0),s("h2",{attrs:{id:"代码规范"}},[t._v("代码规范")]),s("p",[s("a",{attrs:{href:"https://nefe.github.io/one-design-docs/#/docs-code-code",target:"_blank",rel:"noopener noreferrer"}},[t._v("Q A"),s("OutboundLink")],1)]),t._m(1),s("h2",{attrs:{id:"vdom"}},[t._v("VDOM")]),t._m(2),s("p",[t._v("经过 Diff 算法会计算出 Virtual DOM 的差异，然后将这些差异进行实际的DOM操作更新页面。")]),s("h2",{attrs:{id:"常用组件"}},[t._v("常用组件")]),t._m(3),s("h2",{attrs:{id:"组件通讯"}},[t._v("组件通讯")]),t._m(4),s("h2",{attrs:{id:"指针问题"}},[t._v("指针问题")]),t._m(5),t._m(6),t._m(7),t._m(8),s("p",[t._v("Now, let's try it 👉")])])}),[function(){var t=this.$createElement,e=this._self._c||t;return e("blockquote",[e("p",[this._v("React是一个专注于构建用户界面的 Javascript Library.")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("strong",[this._v("Redux + iron-redux + pont + kiwi")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("blockquote",[e("p",[e("code",[this._v("virtual dom")]),this._v(" 实际上是对实际Dom的一个抽象，是一个 js 对象。react所有的表层操作实际上是在操作"),e("code",[this._v("Virtual dom")]),this._v("。")])])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ol",[s("li",[s("code",[t._v("axios")]),t._v("("),s("code",[t._v("http")]),t._v("请求模块)")]),s("li",[s("code",[t._v("echarts-for-react")]),t._v("(可视化图表)")]),s("li",[s("code",[t._v("recharts")]),t._v("(基于react封装的图表)")]),s("li",[s("code",[t._v("nprogress")]),t._v("(顶部加载条)")]),s("li",[s("code",[t._v("react-draft-wysiwyg(")]),t._v("别人基于react的富文本封装)")]),s("li",[s("code",[t._v("react-draggable")]),t._v("(拖拽模块)")]),s("li",[s("code",[t._v("screenfull")]),t._v("(全屏插件)")]),s("li",[s("code",[t._v("photoswipe")]),t._v("(图片弹层查看插件)")]),s("li",[s("code",[t._v("animate.css")])]),s("li",[s("code",[t._v("redux Web")]),t._v(" (应用是一个状态机，视图与状态是一一对应的.所有的状态，保存在一个对象里面)")]),s("li",[s("code",[t._v("redux-logger")]),t._v(" 日志")]),s("li",[s("code",[t._v("Reselect")]),t._v(" 记忆组件")]),s("li",[s("code",[t._v("redux-thunk")]),t._v("(解决异步action的问题)")]),s("li",[s("code",[t._v("redux-saga")]),t._v(" (解决异步action的问题)")]),s("li",[s("code",[t._v("react-router-redux")]),t._v("(保持路由与应用状态(state)同步)")]),s("li",[s("code",[t._v("react-router-dom")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("ol",[e("li",[e("p",[e("strong",[this._v("父传子")])]),e("p",[this._v("React数据流动是单向的;父组件通过props向子组件传递需要的信息")])]),e("li",[e("p",[e("strong",[this._v("子传父")])]),e("ul",[e("li",[this._v("利用回调函数")]),e("li",[this._v("利用自定义事件机制")])]),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("// 一般改变state值的一种方式\nconst { data } = this.state;\nthis.setState({ data: {...data, key: 1 } });\n// 另外一种可以通过callback的方式改变state的值\nthis.setState(({ data }) => ({ data: {...data, key: 1 } }));\n// 还可以\nthis.setState((state, props) => {\nreturn { counter: state.counter + props.step };\n});\n")])])])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v('run(){\n\talert("第一种方法！")\n}\n\n<button onClick={this.run.bind(this)}>第一种</button>\n')])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v('constructor(props) {\n    super(props);\n    this.state={\n    //定义数据\n    }\n    this.run = this.run.bind(this);\n}\n\nrun(){\n\talert("第二种方法！")\n}\n\n<button onClick={this.run}>第二种</button>\n')])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v('run=()=> {\n\talert("第三种方法！")\n}\n\n<button onClick={this.run}>第三种</button>\n')])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v('run(){\n\talert("第四种方法！")\n}\n\n<button onClick={()=>this.run()>第四种</button>\n')])])])}],!1,null,null,null);e.default=a.exports}}]);