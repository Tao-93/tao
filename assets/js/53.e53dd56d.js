(window.webpackJsonp=window.webpackJsonp||[]).push([[53],{309:function(e,n,o){"use strict";o.r(n);var t=o(0),a=Object(t.a)({},(function(){var e=this.$createElement;this._self._c;return this._m(0)}),[function(){var e=this,n=e.$createElement,o=e._self._c||n;return o("div",{staticClass:"content"},[o("h1",{attrs:{id:"执行上下文"}},[e._v("执行上下文")]),o("p",[e._v("当执行 JS 代码时，会产生三种执行上下文")]),o("ul",[o("li",[e._v("全局执行上下文")]),o("li",[e._v("函数执行上下文")]),o("li",[e._v("eval 执行上下文")])]),o("p",[e._v("每个执行上下文中都有三个重要的属性")]),o("ul",[o("li",[e._v("变量对象（VO），包含变量、函数声明和函数的形参，该属性只能在全局上下文中访问")]),o("li",[e._v("作用域链（JS 采用词法作用域，也就是说变量的作用域是在定义时就决定了）")]),o("li",[e._v("this")])]),o("div",{staticClass:"language- extra-class"},[o("pre",{pre:!0,attrs:{class:"language-text"}},[o("code",[e._v("var a = 10\nfunction foo(i) {\n  var b = 20\n}\nfoo()\n")])])]),o("p",[e._v("执行栈中有两个上下文：全局上下文和函数 foo 上下文。")]),o("div",{staticClass:"language- extra-class"},[o("pre",{pre:!0,attrs:{class:"language-text"}},[o("code",[e._v("stack = [\n    globalContext,\n    fooContext\n]\n")])])]),o("p",[e._v("对于全局上下文来说，VO 大概是这样的")]),o("div",{staticClass:"language- extra-class"},[o("pre",{pre:!0,attrs:{class:"language-text"}},[o("code",[e._v("globalContext.VO === globe\nglobalContext.VO = {\n    a: undefined,\n\tfoo: <Function>,\n}\n")])])]),o("p",[e._v("对于函数 "),o("code",[e._v("foo")]),e._v(" 来说，VO 不能访问，只能访问到活动对象（AO）")]),o("div",{staticClass:"language- extra-class"},[o("pre",{pre:!0,attrs:{class:"language-text"}},[o("code",[e._v("fooContext.VO === foo.AO\nfooContext.AO {\n    i: undefined,\n\tb: undefined,\n    arguments: <>\n}\n// arguments 是函数独有的对象(箭头函数没有)\n// 该对象是一个伪数组，有 `length` 属性且可以通过下标访问元素\n// 该对象中的 `callee` 属性代表函数本身\n// `caller` 属性代表函数的调用者\n")])])]),o("p",[e._v("对于作用域链，可以把它理解成包含自身变量对象和上级变量对象的列表，通过 "),o("code",[e._v("[[Scope]]")]),e._v(" 属性查找上级变量")]),o("div",{staticClass:"language- extra-class"},[o("pre",{pre:!0,attrs:{class:"language-text"}},[o("code",[e._v("fooContext.[[Scope]] = [\n    globalContext.VO\n]\nfooContext.Scope = fooContext.[[Scope]] + fooContext.VO\nfooContext.Scope = [\n    fooContext.VO,\n    globalContext.VO\n]\n")])])]),o("p",[e._v("接下来让我们看一个老生常谈的例子，"),o("code",[e._v("var")])]),o("div",{staticClass:"language- extra-class"},[o("pre",{pre:!0,attrs:{class:"language-text"}},[o("code",[e._v("b() // call b\nconsole.log(a) // undefined\n\nvar a = 'Hello world'\n\nfunction b() {\n\tconsole.log('call b')\n}\n")])])]),o("p",[e._v("想必以上的输出大家肯定都已经明白了，这是因为函数和变量提升的原因。通常提升的解释是说将声明的代码移动到了顶部，这其实没有什么错误，便于大家理解。但是更准确的解释应该是：在生成执行上下文时，会有两个阶段。第一个阶段是创建的阶段（具体步骤是创建 VO），JS 解释器会找出需要提升的变量和函数，并且给他们提前在内存中开辟好空间，函数的话会将整个函数存入内存中，变量只声明并且赋值为 undefined，所以在第二个阶段，也就是代码执行阶段，我们可以直接提前使用。")]),o("p",[e._v("在提升的过程中，相同的函数会覆盖上一个函数，并且函数优先于变量提升")]),o("div",{staticClass:"language- extra-class"},[o("pre",{pre:!0,attrs:{class:"language-text"}},[o("code",[e._v("b() // call b second\n\nfunction b() {\n\tconsole.log('call b fist')\n}\nfunction b() {\n\tconsole.log('call b second')\n}\nvar b = 'Hello world'\n")])])]),o("p",[o("code",[e._v("var")]),e._v(" 会产生很多错误，所以在 ES6中引入了 "),o("code",[e._v("let")]),e._v("。"),o("code",[e._v("let")]),e._v(" 不能在声明前使用，但是这并不是常说的 "),o("code",[e._v("let")]),e._v(" 不会提升，"),o("code",[e._v("let")]),e._v(" 提升了声明但没有赋值，因为临时死区导致了并不能在声明前使用。")]),o("p",[e._v("对于非匿名的立即执行函数需要注意以下一点")]),o("div",{staticClass:"language- extra-class"},[o("pre",{pre:!0,attrs:{class:"language-text"}},[o("code",[e._v("var foo = 1\n(function foo() {\n    foo = 10\n    console.log(foo)\n}()) // -> ƒ foo() { foo = 10 ; console.log(foo) }\n")])])]),o("p",[e._v("因为当 JS 解释器在遇到非匿名的立即执行函数时，会创建一个辅助的特定对象，然后将函数名称作为这个对象的属性，因此函数内部才可以访问到 "),o("code",[e._v("foo")]),e._v("，但是这又个值是只读的，所以对它的赋值并不生效，所以打印的结果还是这个函数，并且外部的值也没有发生更改。")]),o("blockquote",[o("div",{staticClass:"language- extra-class"},[o("pre",{pre:!0,attrs:{class:"language-text"}},[o("code",[e._v("specialObject = {};\n \nScope = specialObject + Scope;\n \nfoo = new FunctionExpression;\nfoo.[[Scope]] = Scope;\nspecialObject.foo = foo; // {DontDelete}, {ReadOnly}\n \ndelete Scope[0]; // remove specialObject from the front of scope chain\n")])])])]),o("p",[e._v("Now, let's try it 👉")])])}],!1,null,null,null);n.default=a.exports}}]);