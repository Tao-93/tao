(window.webpackJsonp=window.webpackJsonp||[]).push([[30],{282:function(t,n,a){"use strict";a.r(n);var s=a(0),e=Object(s.a)({},(function(){var t=this.$createElement;this._self._c;return this._m(0)}),[function(){var t=this,n=t.$createElement,a=t._self._c||n;return a("div",{staticClass:"content"},[a("h1",{attrs:{id:"vuex"}},[t._v("VUEX")]),a("p",[t._v("Vuex 是一个专为 Vue.js 应用程序开发的状态管理模式。它采用集中式存储管理应用的所有组件的状态，并以相应的规则保证状态以一种可预测的方式发生变化。")]),a("p",[t._v("vuex就像一个无形的仓库，公共的状态我们会抽离出来放进里面。vuex的核心主要包括以下几个部分：")]),a("ul",[a("li",[a("p",[t._v("state-----------------里面就是存放的我们上面所提到的状态,Vuex 通过 "),a("code",[t._v("store")]),t._v(" 选项，提供了一种机制将状态从根组件“注入”到每一个子组件中（需调用 "),a("code",[t._v("Vue.use(Vuex)")]),t._v("),子组件能通过 "),a("code",[t._v("this.$store")]),t._v(" 访问.       ---\x3e>> "),a("code",[t._v("mapState")]),t._v(" 辅助函数")])]),a("li",[a("p",[t._v("getters---------------从state中派生出状态，比如将state中的某个状态进行过滤然后获取新的状态  ---\x3e>>"),a("code",[t._v("mapGetters")]),t._v(" 辅助函数")])]),a("li",[a("p",[t._v("mutations----------就是存放更改状态的方法，Vuex 的 store 中的状态的唯一方法是提交 mutation。"),a("strong",[t._v("mutation 必须是同步函数")]),t._v(" 。    ---\x3e>>mapMutations")]),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("store"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("commit")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'increment'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Payload "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])]),a("li",[a("p",[t._v("actions---------------就是mutation的加强版，它可以通过commit mutations中的方法来改变状态，最重要的是它可以进行异步操作。 ---\x3e>>mapActions")]),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("store.dispatch('increment', Payload )\n\nactions: {\n  incrementAsync ({ commit }) {\n    setTimeout(() => {\n      commit('increment')\n    }, 1000)\n  }\n}\n")])])]),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 以载荷形式分发")]),t._v("\nstore"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("dispatch")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'incrementAsync'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  amount"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 以对象形式分发")]),t._v("\nstore"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("dispatch")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  type"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'incrementAsync'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  amount"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])]),a("li",[a("p",[t._v("modules-------------就是当用这个容器来装这些状态还是显得混乱的时候，我们就可以把容器分成几块，把状态和管理规则分类来装。这和我们创建js模块是一个目的，让代码结构更清晰。")])])]),a("h2",{attrs:{id:"实践"}},[t._v("实践")]),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('<template>\n  <div>\n    <p>{{localUserDetail}} - mapState</p>\n    <p>{{GET_USER_DETAIL}} - mapGetters</p>\n    <button @click="handleMapMutation">home - mapMutations</button>\n    <button @click="handleMapAction">home - mapActions</button>\n  </div>\n</template>\n')])])]),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("export default {\n  name: 'VUEX',\n  computed: {\n    ...mapState({\n      userDetail: state => state.userDetail,\n      localUserDetail (state) {\n        return { ...state.userDetail, ...{ mapStateLocal: true } }\n      }\n    }),\n    ...mapGetters({\n      GET_USER_DETAIL\n    })\n  },\n  methods: {\n  \t/-----------------\x3e>> N1\n    ...mapMutations({\n      handleMapMutation: 'SET_USER_DETAIL'\n    }),\n    ...mapActions({\n      handleMapAction: 'SET_USER_DETAIL'\n    }),\n    /-----------------\x3e>> N2\n  \t/**\n    ...mapMutations(\n      [SET_USER_DETAIL]\n    ),\n    ...mapActions(\n      [SET_USER_DETAIL]\n    ),\n    handleMapMutation () {\n      this.SET_USER_DETAIL({ mapMutations: true })\n    },\n    handleMapAction () {\n      this.SET_USER_DETAIL()\n    }\n    */\n  }\n}\n<\/script>\n")])])])])}],!1,null,null,null);n.default=e.exports}}]);