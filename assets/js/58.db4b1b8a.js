(window.webpackJsonp=window.webpackJsonp||[]).push([[58],{316:function(n,t,i){"use strict";i.r(t);var s=i(0),a=Object(s.a)({},(function(){var n=this.$createElement;this._self._c;return this._m(0)}),[function(){var n=this,t=n.$createElement,i=n._self._c||t;return i("div",{staticClass:"content"},[i("h1",{attrs:{id:"详解闭包"}},[n._v("详解闭包")]),i("h3",{attrs:{id:"什么是闭包"}},[n._v("什么是闭包")]),i("ul",[i("li",[n._v("闭包就是能够读取其他函数内部变量的函数。")]),i("li",[n._v("闭包是函数和声明该函数的词法环境的组合。")]),i("li",[n._v("有权访问另一个函数作用域的函数都是闭包。")])]),i("p",[i("strong",[n._v("在本质上，闭包是将函数内部和函数外部连接起来的桥梁。")])]),i("h4",{attrs:{id:"变量的作用域"}},[n._v("变量的作用域")]),i("p",[n._v("变量的作用域有两种：全局变量和局部变量。")]),i("p",[n._v("javascript语言的特别之处就在于：函数内部可以直接读取全局变量，但是在函数外部无法读取函数内部的局部变量。")]),i("h4",{attrs:{id:"如何从外部函数内部变量？"}},[n._v("如何从外部函数内部变量？")]),i("p",[n._v("我们有时候需要获取到函数内部的局部变量。但是，上面已经说过了，正常情况下，这是办不到的！只有通过变通的方法才能实现。")]),i("p",[n._v("那就是在函数内部，再定义一个函数。")]),i("div",{staticClass:"language- extra-class"},[i("pre",{pre:!0,attrs:{class:"language-text"}},[i("code",[n._v("function fn(){\n    var n = 0;\n    function ins() {\n        n++;\n        console.log(n);\n    }\n    ins();  \n    ins(); \n}\nfn(); //控制台输出1，再输出2\n")])])]),i("p",[n._v("在上面的代码中，in函数就被包括在fn函数内部，这时fn函数内部的所有局部变量，对in函数都是可见的。但是反过来就不行，in函数内部的局部变量，对fn是不可见的。")]),i("p",[n._v('这就是Javascript语言特有的"链式作用域"结构（chain scope），子对象会一级一级地向上寻找所有父对象的变量。所以，父对象的所有变量，对子对象都是可见的，反之则不成立。')]),i("div",{staticClass:"language- extra-class"},[i("pre",{pre:!0,attrs:{class:"language-text"}},[i("code",[n._v("function fn(){\n    var n = 0;\n    function ins() {\n        n++;\n        console.log(n);\n    }\n    return ins;\n}\nvar inFn = fn();\ninFn(); //控制台输出1\ninFn(); //控制台输出2\n")])])]),i("p",[n._v("这就是闭包，return 返回函数标识 ins，是因为在 fn 函数外部无法直接调用 ins函数，所以 return ins 与外部联系起来，外部可以访问fn内部定义的变量 n。")]),i("h4",{attrs:{id:"闭包的用途"}},[n._v("闭包的用途")]),i("ul",[i("li",[n._v("可以读取函数内部的变量")]),i("li",[n._v("让这些变量的值始终保持在内存中\n"),i("ul",[i("li",[n._v("fn函数是ins函数的父函数，而ins函数被赋给了一个全局变量，这导致ins函数始终在内存中，而ins函数的存在依赖于fn函数，因此fn函数也始终在内存中，不会在调用结束后，被垃圾回收机制（garbage collection）回收。")])])])]),i("h4",{attrs:{id:"使用闭包的注意点"}},[n._v("使用闭包的注意点")]),i("ul",[i("li",[n._v("由于闭包会使得函数中的变量都被保存在内存中，内存消耗很大，所以不能滥用闭包，否则会造成网页的性能问题，在IE中可能导致内存泄露。解决方法是，在退出函数之前，将不使用的局部变量全部删除。")]),i("li",[n._v("闭包会在父函数外部，改变父函数内部变量的值。所以，如果你把父函数当作对象（object）使用，把闭包当作它的公用方法（Public Method），把内部变量当作它的私有属性（private value），这时一定要小心，不要随便改变父函数内部变量的值。")])]),i("p",[n._v("Now, let's try it 👉")])])}],!1,null,null,null);t.default=a.exports}}]);